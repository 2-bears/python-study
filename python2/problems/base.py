#coding:utf-8
import sys

# problem detail see: http://rosalind.info/problems


# 统计序列中 A,  T,  C, G 的个数
def DNA(seq):
	seq = "CTTACTTGTTCTGACTTTGGCTTGGCATAACCGTTTGGGACGTTTTACCGGGTGAATTGGGTAGCGCGACGGTCCGGCGGTTTCTCTGTATCTCAGACTACGTGTCTAGGAGGGTAGGTCCCGGCAGGGCGCAGATACCGTTGCTCTCCGGGGACTTTGTACGCCAAGGCCCGAACTTTGCTGTACAGATTCTTTCCTCAGAGATTTGGTAGGAGCGAAAAAGACATGGACGTTCAAACTGTTTAACATGGGGGGAGAGACTACACCCACGCTGCCGACAAAGCCGCCGCTAGAGCTCAAAGCTCTTAAGCAGGTCATATGCGGACCCAGTGATAGCTATTATCGCAACACAACTGGTTATAGCAGGGTTTGTGGTCCGCGCATGGCGAGTGCGAGCTCCCTGACAGAGGCAATTACCTATGATGTTGTACCTAAGGATAGGGGCGAGAAAGCATGATTTTCCAGCCAAAACTCAGAGTCAGGACTGCATCACTTAAGGGTCCTCTCATATTTCTACGTGCTATACGGGCGAACCTCCTCGTCCGACGTCGTATCAGTGTACGGGACTATGCGGCCCCGCGGTGTTACTTAGCACGTCGCAAACTACTCCTACTCTTACAAGAATTTTTCCCCCCAAACATCTCCCGCTCGGGTAGCTTTACGGAACATAAAGGGGGCAACGTTGAAGTTCTATTAGGGGTGGCTCCCAAGCGCCTTTGTCTCATCCGCGATTAATGGAGCATCGTAAGTCATGTTGCACAATAGAGTTTTGGTCGAATGGAAGCTAATTTAGAGAGCCGGGATTTCAACCCGAACGTCTACTGGGGTGGCCTACAAAACATTCTTAAAGGCATGAGGCAGTAAATACAGGCGTTGATTCGAGATTCCTCTCATCCGCTGAAGGACTTAAGTGCTCGCCGGTATATATTAGGAGAAAGTATGGGATC"
	dict = {'A':0, 'C':0, 'G': 0, 'T':0}

	for ch in seq:
		if dict.has_key(ch):
			dict[ch] = dict[ch] + 1
		else:
			dict[ch] = 0

	print ("%d %d %d %d" %(dict['A'], dict['C'], dict['G'], dict['T']))

# 将DNA序列转为RNA
def RNA(seq):
	seq = "TGTCCGAACTTTGTCTATGCTGTCGCTAAGCTGTTCCGAAGGTGCGTGTGTTTAGCAGACTTTTGTCGTTGCGACAAATGTGCGACGCTGTCATGACCCAGTGCCCCGAACCTTCAGACACCGAGATTGGTCGGCGTTTATCAAGGATCTTCCCATAATCGGGTATTACTCCGATAGAGCCCGTGGACGTCAGCTGTCGCCAACAGGTTGCATGCACGGCGGCCGCAACAAGTCTTTCGGGCGGAGGGACCGAGACGCCTAAATGCAAAGTACCTACCGCGGAGCAGTACCTGTTTCGGGAGCGCCGTTTATCCTTGCAGCAAATTCGAGTAGTTAGATCGTCGCAAGCCGATCGAATCTCTATTCAAAGTCAGGACAATCCAACGAGGCCCGCGGTACAGTCATGTTGCCCCTATTAGTTTTACGCGGACCACGCACGATACGGGGCCCAGGGTGACGGGCACCAGGGGCGCAGTTCGGGGGCACCAAATGCCTCGCATCACGGACCGGCATCAGTTCATGGCGGTGGTTCCTCGGGACTGCGCTTCTGTCCAGACTTTACTACATAAACCGTTCGTCGTGATTATGGCAGGATTCCGAGTGCTGCTGGATTAAATCTGCAATGTGATTACCGAAATCAATGTAGTTCGCAATCGGCGTATTTGGTCTGTACTATACACACATTCGGCCCTGATGGTCGAGTCAATGCCACAAACCACTGACTAGCTTAACGTGAAGGCAGCCGTTTCGAATGCAAATTTGGTTTCTTCCTCGTGCTAGGCCAGTCTATATAATACATAATGCATCTTTCGTTACTCGCCGCAGGCAATCTGACGTTTGACGTTATACTAACAGTGGACCCCAGACTGTGTTACAATTGGATCGTATCCTCGAATTCTTAACTAGGCGGCGCTTGGACGGAGATTGGAG"
	seq = seq.replace('T', 'U')
	print seq

# everse complement of a stand of DNA
# the reverse complement of "GTCA" is "TGAC").
def REVC(seq):
    dict = {'A':'T', 'C':'G', 'G':'C', 'T':'A'}
    seq = "GCCGACCTTACAAGAGTGAACATTTCCTCCGCTCCTGGCTTCCATCCACCTCAGATTTGGAATGCCATCTTGTAACGGACTGTACGCAGCACACGTACGACAAATACGTATAAAACATGCTGCTCGTTTTAACCCACCAGAGGCACATAACATTAGGACTTAGACAACGGATAAATGAGGAGGTCCGATTACACCAATCAAACCGTGGGCTTTTCTGCGCTATTGGTTCAAAGGTCTTGCTACTATGTATCTATTCTTAATGTCTAGCGGGTTCCTCGACATCCGCATCGTGTCTCTTAGGGTCTCAATTACCCTTTCTGAGAGCGATCCCCAAGTCCACTGATAGAAAACTCGGGTAGGCAGAATTGAGTTTCGCTTCGATCACCGGGTGATACTCCTGCCCCTTCCACTTGATATCTGTGACTCCGGCCAGCCTCACACGTTTGCTTGCGAATGACCCGCAGTGTCTTAATTCGTAGTAACCCATACCCTTCTGCCTCGTTCATATGGACAATAGCGCAGGAAGAGGCGCTAGGTTTCCGTGGTCTGCGGCCGTTCATGCAAGAAATAGGAACTCTTTAATCTCTTTACCCAATCAAACAGGGGTCGGGTTTGGGGTGCCTCTTACGACAGGGGAACCGCGAATAAATTTCCAGTGAATATCATAATGAGTAGCTATCGTGTGCGAGACTAATGCTACGGCCCGAATAAATTAAATATAGATGCCTACAAACTGCACTCCTACCTAGAGAAGACTTGCATTCTATCTGCGTGTATCCCGATTCGTATATAATATTACCGCGAGTTCGTTGGCAGCCGTTA"
    seqList = list(seq)
    seqList.reverse()     #顺序颠倒

    result=""
    for i in range(len(seqList)):
        if dict.has_key(seqList[i]):
        	seqList[i] = dict[seqList[i]]
		result += seqList[i]
    
    print result

# 计算GC比例
def gcRatio(seq):
	gcCount=0
	for ch in seq:
		if ch == 'C' or ch == 'G':
			gcCount = gcCount + 1
	return 100.0*gcCount/len(seq)


# description see: http://rosalind.info/problems/gc/
def GC(fileName):
	fileName="gc.dat"
	file = open(fileName)
	key=""
	maxKey=""
	maxRatio=0.0
	lineStr = ""
	for line in file:
		if line.startswith('>'):
			if lineStr != "":
				ratio = gcRatio(lineStr)
				lineStr = ""
				if ratio > maxRatio:
					maxKey, maxRatio = key, ratio

			key=line[1:].strip()
		else:
			lineStr = lineStr + line.strip()
		
	if lineStr != "":
		ratio = gcRatio(lineStr)
		lineStr = ""
		if ratio > maxRatio:
			maxKey, maxRatio = key, ratio

	print("%s\n%f" %(maxKey, maxRatio))

	




# 程序入口
if __name__=="__main__":
    print("programe loaded...")
    GC("")
